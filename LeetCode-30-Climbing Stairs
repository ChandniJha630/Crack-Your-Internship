/*
You are climbing a staircase. It takes n steps to reach the top.
Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Example 1:

Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps

Example 2:

Input: n = 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step
*/


#include <iostream>

class Solution {
public:
    int climbStairs(int n) {
        int temp1 = 1;
        int temp2 = 2;
        int t;
        if (n == 1 || n == 2) return n;
        for (int i = 3; i <= n; i++) {
            t = temp1 + temp2;
            temp1 = temp2;
            temp2 = t;
        }
        return t;
    }
};

int main() {
    Solution solution;

    // Example usage:
    int n = 5;
    int waysToClimb = solution.climbStairs(n);

    std::cout << "Number of ways to climb stairs with " << n << " steps: " << waysToClimb << std::endl;

    return 0;
}
